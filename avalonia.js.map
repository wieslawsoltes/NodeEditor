{
  "version": 3,
  "sources": ["../webapp/modules/avalonia/canvas.ts", "../webapp/modules/avalonia/caretHelper.ts", "../webapp/modules/avalonia/input.ts", "../webapp/modules/avalonia/dom.ts", "../webapp/modules/avalonia/caniuse.ts", "../webapp/modules/avalonia/stream.ts", "../webapp/modules/avalonia/nativeControlHost.ts", "../webapp/modules/avalonia.ts"],
  "sourcesContent": ["interface SKGLViewInfo {\r\n    context: WebGLRenderingContext | WebGL2RenderingContext | undefined;\r\n    fboId: number;\r\n    stencil: number;\r\n    sample: number;\r\n    depth: number;\r\n}\r\n\r\ntype CanvasElement = {\r\n    Canvas: Canvas | undefined;\r\n} & HTMLCanvasElement;\r\n\r\nexport class Canvas {\r\n    static elements: Map<string, HTMLCanvasElement>;\r\n\r\n    htmlCanvas: HTMLCanvasElement;\r\n    glInfo?: SKGLViewInfo;\r\n    renderFrameCallback: () => void;\r\n    renderLoopEnabled: boolean = false;\r\n    renderLoopRequest: number = 0;\r\n    newWidth?: number;\r\n    newHeight?: number;\r\n\r\n    public static initGL(element: HTMLCanvasElement, elementId: string, renderFrameCallback: () => void): SKGLViewInfo | null {\r\n        const view = Canvas.init(true, element, elementId, renderFrameCallback);\r\n        if (!view || !view.glInfo) {\r\n            return null;\r\n        }\r\n\r\n        return view.glInfo;\r\n    }\r\n\r\n    static init(useGL: boolean, element: HTMLCanvasElement, elementId: string, renderFrameCallback: () => void): Canvas | null {\r\n        const htmlCanvas = element as CanvasElement;\r\n        if (!htmlCanvas) {\r\n            console.error(\"No canvas element was provided.\");\r\n            return null;\r\n        }\r\n\r\n        if (!Canvas.elements) {\r\n            Canvas.elements = new Map<string, HTMLCanvasElement>();\r\n        }\r\n        Canvas.elements.set(elementId, element);\r\n\r\n        const view = new Canvas(useGL, element, renderFrameCallback);\r\n\r\n        htmlCanvas.Canvas = view;\r\n\r\n        return view;\r\n    }\r\n\r\n    public constructor(useGL: boolean, element: HTMLCanvasElement, renderFrameCallback: () => void) {\r\n        this.htmlCanvas = element;\r\n        this.renderFrameCallback = renderFrameCallback;\r\n\r\n        if (useGL) {\r\n            const ctx = Canvas.createWebGLContext(element);\r\n            if (!ctx) {\r\n                console.error(\"Failed to create WebGL context\");\r\n                return;\r\n            }\r\n\r\n            const GL = (globalThis as any).AvaloniaGL;\r\n\r\n            // make current\r\n            GL.makeContextCurrent(ctx);\r\n\r\n            const GLctx = GL.currentContext.GLctx as WebGLRenderingContext;\r\n\r\n            // read values\r\n            const fbo = GLctx.getParameter(GLctx.FRAMEBUFFER_BINDING);\r\n\r\n            this.glInfo = {\r\n                context: ctx,\r\n                fboId: fbo ? fbo.id : 0,\r\n                stencil: GLctx.getParameter(GLctx.STENCIL_BITS),\r\n                sample: 0, // TODO: GLctx.getParameter(GLctx.SAMPLES)\r\n                depth: GLctx.getParameter(GLctx.DEPTH_BITS)\r\n            };\r\n        }\r\n    }\r\n\r\n    public setEnableRenderLoop(enable: boolean): void {\r\n        this.renderLoopEnabled = enable;\r\n\r\n        // either start the new frame or cancel the existing one\r\n        if (enable) {\r\n            // console.info(`Enabling render loop with callback ${this.renderFrameCallback._id}...`);\r\n            this.requestAnimationFrame();\r\n        } else if (this.renderLoopRequest !== 0) {\r\n            window.cancelAnimationFrame(this.renderLoopRequest);\r\n            this.renderLoopRequest = 0;\r\n        }\r\n    }\r\n\r\n    public requestAnimationFrame(renderLoop?: boolean): void {\r\n        // optionally update the render loop\r\n        if (renderLoop !== undefined && this.renderLoopEnabled !== renderLoop) {\r\n            this.setEnableRenderLoop(renderLoop);\r\n        }\r\n\r\n        // skip because we have a render loop\r\n        if (this.renderLoopRequest !== 0) {\r\n            return;\r\n        }\r\n\r\n        // add the draw to the next frame\r\n        this.renderLoopRequest = window.requestAnimationFrame(() => {\r\n            if (this.glInfo) {\r\n                const GL = (globalThis as any).AvaloniaGL;\r\n                // make current\r\n                GL.makeContextCurrent(this.glInfo.context);\r\n            }\r\n\r\n            if (this.htmlCanvas.width !== this.newWidth) {\r\n                this.htmlCanvas.width = this.newWidth ?? 0;\r\n            }\r\n\r\n            if (this.htmlCanvas.height !== this.newHeight) {\r\n                this.htmlCanvas.height = this.newHeight ?? 0;\r\n            }\r\n\r\n            this.renderFrameCallback();\r\n            this.renderLoopRequest = 0;\r\n\r\n            // we may want to draw the next frame\r\n            if (this.renderLoopEnabled) {\r\n                this.requestAnimationFrame();\r\n            }\r\n        });\r\n    }\r\n\r\n    public setCanvasSize(width: number, height: number): void {\r\n        this.newWidth = width;\r\n        this.newHeight = height;\r\n\r\n        if (this.htmlCanvas.width !== this.newWidth) {\r\n            this.htmlCanvas.width = this.newWidth;\r\n        }\r\n\r\n        if (this.htmlCanvas.height !== this.newHeight) {\r\n            this.htmlCanvas.height = this.newHeight;\r\n        }\r\n\r\n        if (this.glInfo) {\r\n            const GL = (globalThis as any).AvaloniaGL;\r\n            // make current\r\n            GL.makeContextCurrent(this.glInfo.context);\r\n        }\r\n    }\r\n\r\n    public static setCanvasSize(element: HTMLCanvasElement, width: number, height: number): void {\r\n        const htmlCanvas = element as CanvasElement;\r\n        if (!htmlCanvas || !htmlCanvas.Canvas) {\r\n            return;\r\n        }\r\n\r\n        htmlCanvas.Canvas.setCanvasSize(width, height);\r\n    }\r\n\r\n    public static requestAnimationFrame(element: HTMLCanvasElement, renderLoop?: boolean): void {\r\n        const htmlCanvas = element as CanvasElement;\r\n        if (!htmlCanvas || !htmlCanvas.Canvas) {\r\n            return;\r\n        }\r\n\r\n        htmlCanvas.Canvas.requestAnimationFrame(renderLoop);\r\n    }\r\n\r\n    static createWebGLContext(htmlCanvas: HTMLCanvasElement): WebGLRenderingContext | WebGL2RenderingContext {\r\n        const contextAttributes = {\r\n            alpha: 1,\r\n            depth: 1,\r\n            stencil: 8,\r\n            antialias: 0,\r\n            premultipliedAlpha: 1,\r\n            preserveDrawingBuffer: 0,\r\n            preferLowPowerToHighPerformance: 0,\r\n            failIfMajorPerformanceCaveat: 0,\r\n            majorVersion: 2,\r\n            minorVersion: 0,\r\n            enableExtensionsByDefault: 1,\r\n            explicitSwapControl: 0,\r\n            renderViaOffscreenBackBuffer: 1\r\n        };\r\n\r\n        const GL = (globalThis as any).AvaloniaGL;\r\n\r\n        let ctx: WebGLRenderingContext = GL.createContext(htmlCanvas, contextAttributes);\r\n\r\n        if (!ctx && contextAttributes.majorVersion > 1) {\r\n            console.warn(\"Falling back to WebGL 1.0\");\r\n            contextAttributes.majorVersion = 1;\r\n            contextAttributes.minorVersion = 0;\r\n            ctx = GL.createContext(htmlCanvas, contextAttributes);\r\n        }\r\n\r\n        return ctx;\r\n    }\r\n}\r\n\r\ntype SizeWatcherElement = {\r\n    SizeWatcher: SizeWatcherInstance;\r\n} & HTMLElement;\r\n\r\ninterface SizeWatcherInstance {\r\n    callback: (width: number, height: number) => void;\r\n}\r\n\r\nexport class SizeWatcher {\r\n    static observer: ResizeObserver;\r\n    static elements: Map<string, HTMLElement>;\r\n\r\n    public static observe(element: HTMLElement, elementId: string, callback: (width: number, height: number) => void): void {\r\n        if (!element || !callback) {\r\n            return;\r\n        }\r\n\r\n        SizeWatcher.init();\r\n\r\n        const watcherElement = element as SizeWatcherElement;\r\n        watcherElement.SizeWatcher = {\r\n            callback\r\n        };\r\n\r\n        SizeWatcher.elements.set(elementId, element);\r\n        SizeWatcher.observer.observe(element);\r\n\r\n        SizeWatcher.invoke(element);\r\n    }\r\n\r\n    public static unobserve(elementId: string): void {\r\n        if (!elementId || !SizeWatcher.observer) {\r\n            return;\r\n        }\r\n\r\n        const element = SizeWatcher.elements.get(elementId);\r\n        if (element) {\r\n            SizeWatcher.elements.delete(elementId);\r\n            SizeWatcher.observer.unobserve(element);\r\n        }\r\n    }\r\n\r\n    static init(): void {\r\n        if (SizeWatcher.observer) {\r\n            return;\r\n        }\r\n\r\n        SizeWatcher.elements = new Map<string, HTMLElement>();\r\n        SizeWatcher.observer = new ResizeObserver((entries) => {\r\n            for (const entry of entries) {\r\n                SizeWatcher.invoke(entry.target);\r\n            }\r\n        });\r\n    }\r\n\r\n    static invoke(element: Element): void {\r\n        const watcherElement = element as SizeWatcherElement;\r\n        const instance = watcherElement.SizeWatcher;\r\n\r\n        if (!instance || !instance.callback) {\r\n            return;\r\n        }\r\n\r\n        return instance.callback(element.clientWidth, element.clientHeight);\r\n    }\r\n}\r\n\r\nexport class DpiWatcher {\r\n    static lastDpi: number;\r\n    static timerId: number;\r\n    static callback: (old: number, newdpi: number) => void;\r\n\r\n    public static getDpi(): number {\r\n        return window.devicePixelRatio;\r\n    }\r\n\r\n    public static start(callback: (old: number, newdpi: number) => void): number {\r\n        DpiWatcher.lastDpi = window.devicePixelRatio;\r\n        DpiWatcher.timerId = window.setInterval(DpiWatcher.update, 1000);\r\n        DpiWatcher.callback = callback;\r\n\r\n        return DpiWatcher.lastDpi;\r\n    }\r\n\r\n    public static stop(): void {\r\n        window.clearInterval(DpiWatcher.timerId);\r\n    }\r\n\r\n    static update(): void {\r\n        if (!DpiWatcher.callback) {\r\n            return;\r\n        }\r\n\r\n        const currentDpi = window.devicePixelRatio;\r\n        const lastDpi = DpiWatcher.lastDpi;\r\n        DpiWatcher.lastDpi = currentDpi;\r\n\r\n        if (Math.abs(lastDpi - currentDpi) > 0.001) {\r\n            DpiWatcher.callback(lastDpi, currentDpi);\r\n        }\r\n    }\r\n}\r\n", "// Based on https://github.com/component/textarea-caret-position/blob/master/index.js\r\nexport class CaretHelper {\r\n    public static getCaretCoordinates(\r\n        element: HTMLInputElement | HTMLTextAreaElement,\r\n        position: number,\r\n        options?: { debug: boolean }\r\n    ) {\r\n        if (!isBrowser) {\r\n            throw new Error(\r\n                \"textarea-caret-position#getCaretCoordinates should only be called in a browser\"\r\n            );\r\n        }\r\n\r\n        const debug = options?.debug ?? false;\r\n        if (debug) {\r\n            const el = document.querySelector(\r\n                \"#input-textarea-caret-position-mirror-div\"\r\n            );\r\n            if (el) el.parentNode?.removeChild(el);\r\n        }\r\n\r\n        // The mirror div will replicate the textarea's style\r\n        const div = document.createElement(\"div\");\r\n        div.id = \"input-textarea-caret-position-mirror-div\";\r\n        document.body.appendChild(div);\r\n\r\n        const style = div.style;\r\n        const computed = window.getComputedStyle\r\n            ? window.getComputedStyle(element)\r\n            : ((element as any).currentStyle as CSSStyleDeclaration); // currentStyle for IE < 9\r\n        const isInput = element.nodeName === \"INPUT\";\r\n\r\n        // Default textarea styles\r\n        style.whiteSpace = \"pre-wrap\";\r\n        if (!isInput) style.wordWrap = \"break-word\"; // only for textarea-s\r\n\r\n        // Position off-screen\r\n        style.position = \"absolute\"; // required to return coordinates properly\r\n        if (!debug) style.visibility = \"hidden\"; // not 'display: none' because we want rendering\r\n\r\n        // Transfer the element's properties to the div\r\n        properties.forEach((prop: string) => {\r\n            if (isInput && prop === \"lineHeight\") {\r\n                // Special case for <input>s because text is rendered centered and line height may be != height\r\n                if (computed.boxSizing === \"border-box\") {\r\n                    const height = parseInt(computed.height);\r\n                    const outerHeight =\r\n                        parseInt(computed.paddingTop) +\r\n                        parseInt(computed.paddingBottom) +\r\n                        parseInt(computed.borderTopWidth) +\r\n                        parseInt(computed.borderBottomWidth);\r\n                    const targetHeight = outerHeight + parseInt(computed.lineHeight);\r\n                    if (height > targetHeight) {\r\n                        style.lineHeight = `${height - outerHeight}px`;\r\n                    } else if (height === targetHeight) {\r\n                        style.lineHeight = computed.lineHeight;\r\n                    } else {\r\n                        style.lineHeight = \"0\";\r\n                    }\r\n                } else {\r\n                    style.lineHeight = computed.height;\r\n                }\r\n            } else {\r\n                (style as any)[prop] = (computed as any)[prop];\r\n            }\r\n        });\r\n\r\n        if (isFirefox) {\r\n            // Firefox lies about the overflow property for textareas: https://bugzilla.mozilla.org/show_bug.cgi?id=984275\r\n            if (element.scrollHeight > parseInt(computed.height)) {\r\n                style.overflowY = \"scroll\";\r\n            }\r\n        } else {\r\n            style.overflow = \"hidden\"; // for Chrome to not render a scrollbar; IE keeps overflowY = 'scroll'\r\n        }\r\n\r\n        div.textContent = element.value.substring(0, position);\r\n        // The second special handling for input type=\"text\" vs textarea:\r\n        // spaces need to be replaced with non-breaking spaces - http://stackoverflow.com/a/13402035/1269037\r\n        if (isInput) div.textContent = div.textContent.replace(/\\s/g, \"\\u00a0\");\r\n\r\n        const span = document.createElement(\"span\");\r\n        // Wrapping must be replicated *exactly*, including when a long word gets\r\n        // onto the next line, with whitespace at the end of the line before (#7).\r\n        // The  *only* reliable way to do that is to copy the *entire* rest of the\r\n        // textarea's content into the <span> created at the caret position.\r\n        // For inputs, just '.' would be enough, but no need to bother.\r\n        span.textContent = element.value.substring(position) || \".\"; // || because a completely empty faux span doesn't render at all\r\n        div.appendChild(span);\r\n\r\n        const coordinates = {\r\n            top: span.offsetTop + parseInt(computed.borderTopWidth),\r\n            left: span.offsetLeft + parseInt(computed.borderLeftWidth),\r\n            height: parseInt(computed.lineHeight)\r\n        };\r\n\r\n        if (debug) {\r\n            span.style.backgroundColor = \"#aaa\";\r\n        } else {\r\n            document.body.removeChild(div);\r\n        }\r\n\r\n        return coordinates;\r\n    }\r\n}\r\n\r\nconst properties = [\r\n    \"direction\", // RTL support\r\n    \"boxSizing\",\r\n    \"width\", // on Chrome and IE, exclude the scrollbar, so the mirror div wraps exactly as the textarea does\r\n    \"height\",\r\n    \"overflowX\",\r\n    \"overflowY\", // copy the scrollbar for IE\r\n\r\n    \"borderTopWidth\",\r\n    \"borderRightWidth\",\r\n    \"borderBottomWidth\",\r\n    \"borderLeftWidth\",\r\n    \"borderStyle\",\r\n\r\n    \"paddingTop\",\r\n    \"paddingRight\",\r\n    \"paddingBottom\",\r\n    \"paddingLeft\",\r\n\r\n    // https://developer.mozilla.org/en-US/docs/Web/CSS/font\r\n    \"fontStyle\",\r\n    \"fontVariant\",\r\n    \"fontWeight\",\r\n    \"fontStretch\",\r\n    \"fontSize\",\r\n    \"fontSizeAdjust\",\r\n    \"lineHeight\",\r\n    \"fontFamily\",\r\n\r\n    \"textAlign\",\r\n    \"textTransform\",\r\n    \"textIndent\",\r\n    \"textDecoration\", // might not make a difference, but better be safe\r\n\r\n    \"letterSpacing\",\r\n    \"wordSpacing\",\r\n\r\n    \"tabSize\",\r\n    \"MozTabSize\"\r\n];\r\n\r\nconst isBrowser = typeof window !== \"undefined\";\r\nconst isFirefox = isBrowser && (window as any).mozInnerScreenX != null;\r\n", "import { CaretHelper } from \"./caretHelper\";\r\n\r\nenum RawInputModifiers {\r\n    None = 0,\r\n    Alt = 1,\r\n    Control = 2,\r\n    Shift = 4,\r\n    Meta = 8,\r\n\r\n    LeftMouseButton = 16,\r\n    RightMouseButton = 32,\r\n    MiddleMouseButton = 64,\r\n    XButton1MouseButton = 128,\r\n    XButton2MouseButton = 256,\r\n    KeyboardMask = Alt | Control | Shift | Meta,\r\n\r\n    PenInverted = 512,\r\n    PenEraser = 1024,\r\n    PenBarrelButton = 2048\r\n}\r\n\r\nexport class InputHelper {\r\n    public static subscribeKeyEvents(\r\n        element: HTMLInputElement,\r\n        keyDownCallback: (code: string, key: string, modifiers: RawInputModifiers) => boolean,\r\n        keyUpCallback: (code: string, key: string, modifiers: RawInputModifiers) => boolean) {\r\n        const keyDownHandler = (args: KeyboardEvent) => {\r\n            if (keyDownCallback(args.code, args.key, this.getModifiers(args))) {\r\n                args.preventDefault();\r\n            }\r\n        };\r\n        element.addEventListener(\"keydown\", keyDownHandler);\r\n\r\n        const keyUpHandler = (args: KeyboardEvent) => {\r\n            if (keyUpCallback(args.code, args.key, this.getModifiers(args))) {\r\n                args.preventDefault();\r\n            }\r\n        };\r\n\r\n        element.addEventListener(\"keyup\", keyUpHandler);\r\n\r\n        return () => {\r\n            element.removeEventListener(\"keydown\", keyDownHandler);\r\n            element.removeEventListener(\"keyup\", keyUpHandler);\r\n        };\r\n    }\r\n\r\n    public static subscribeTextEvents(\r\n        element: HTMLInputElement,\r\n        inputCallback: (type: string, data: string | null) => boolean,\r\n        compositionStartCallback: (args: CompositionEvent) => boolean,\r\n        compositionUpdateCallback: (args: CompositionEvent) => boolean,\r\n        compositionEndCallback: (args: CompositionEvent) => boolean) {\r\n        const inputHandler = (args: Event) => {\r\n            const inputEvent = args as InputEvent;\r\n\r\n            // todo check cast\r\n            if (inputCallback(inputEvent.type, inputEvent.data)) {\r\n                args.preventDefault();\r\n            }\r\n        };\r\n        element.addEventListener(\"input\", inputHandler);\r\n\r\n        const compositionStartHandler = (args: CompositionEvent) => {\r\n            if (compositionStartCallback(args)) {\r\n                args.preventDefault();\r\n            }\r\n        };\r\n        element.addEventListener(\"compositionstart\", compositionStartHandler);\r\n\r\n        const compositionUpdateHandler = (args: CompositionEvent) => {\r\n            if (compositionUpdateCallback(args)) {\r\n                args.preventDefault();\r\n            }\r\n        };\r\n        element.addEventListener(\"compositionupdate\", compositionUpdateHandler);\r\n\r\n        const compositionEndHandler = (args: CompositionEvent) => {\r\n            if (compositionEndCallback(args)) {\r\n                args.preventDefault();\r\n            }\r\n        };\r\n        element.addEventListener(\"compositionend\", compositionEndHandler);\r\n\r\n        return () => {\r\n            element.removeEventListener(\"input\", inputHandler);\r\n            element.removeEventListener(\"compositionstart\", compositionStartHandler);\r\n            element.removeEventListener(\"compositionupdate\", compositionUpdateHandler);\r\n            element.removeEventListener(\"compositionend\", compositionEndHandler);\r\n        };\r\n    }\r\n\r\n    public static subscribePointerEvents(\r\n        element: HTMLInputElement,\r\n        pointerMoveCallback: (args: PointerEvent) => boolean,\r\n        pointerDownCallback: (args: PointerEvent) => boolean,\r\n        pointerUpCallback: (args: PointerEvent) => boolean,\r\n        wheelCallback: (args: WheelEvent) => boolean\r\n    ) {\r\n        const pointerMoveHandler = (args: PointerEvent) => {\r\n            if (pointerMoveCallback(args)) {\r\n                args.preventDefault();\r\n            }\r\n        };\r\n\r\n        const pointerDownHandler = (args: PointerEvent) => {\r\n            if (pointerDownCallback(args)) {\r\n                args.preventDefault();\r\n            }\r\n        };\r\n\r\n        const pointerUpHandler = (args: PointerEvent) => {\r\n            if (pointerUpCallback(args)) {\r\n                args.preventDefault();\r\n            }\r\n        };\r\n\r\n        const wheelHandler = (args: WheelEvent) => {\r\n            if (wheelCallback(args)) {\r\n                args.preventDefault();\r\n            }\r\n        };\r\n\r\n        element.addEventListener(\"pointermove\", pointerMoveHandler);\r\n        element.addEventListener(\"pointerdown\", pointerDownHandler);\r\n        element.addEventListener(\"pointerup\", pointerUpHandler);\r\n        element.addEventListener(\"wheel\", wheelHandler);\r\n\r\n        return () => {\r\n            element.removeEventListener(\"pointerover\", pointerMoveHandler);\r\n            element.removeEventListener(\"pointerdown\", pointerDownHandler);\r\n            element.removeEventListener(\"pointerup\", pointerUpHandler);\r\n            element.removeEventListener(\"wheel\", wheelHandler);\r\n        };\r\n    }\r\n\r\n    public static subscribeInputEvents(\r\n        element: HTMLInputElement,\r\n        inputCallback: (value: string) => boolean\r\n    ) {\r\n        const inputHandler = (args: Event) => {\r\n            if (inputCallback((args as any).value)) {\r\n                args.preventDefault();\r\n            }\r\n        };\r\n        element.addEventListener(\"input\", inputHandler);\r\n\r\n        return () => {\r\n            element.removeEventListener(\"input\", inputHandler);\r\n        };\r\n    }\r\n\r\n    public static clearInput(inputElement: HTMLInputElement) {\r\n        inputElement.value = \"\";\r\n    }\r\n\r\n    public static focusElement(inputElement: HTMLElement) {\r\n        inputElement.focus();\r\n    }\r\n\r\n    public static setCursor(inputElement: HTMLInputElement, kind: string) {\r\n        inputElement.style.cursor = kind;\r\n    }\r\n\r\n    public static setBounds(inputElement: HTMLInputElement, x: number, y: number, caretWidth: number, caretHeight: number, caret: number) {\r\n        inputElement.style.left = (x).toFixed(0) + \"px\";\r\n        inputElement.style.top = (y).toFixed(0) + \"px\";\r\n\r\n        const { left, top } = CaretHelper.getCaretCoordinates(inputElement, caret);\r\n\r\n        inputElement.style.left = (x - left).toFixed(0) + \"px\";\r\n        inputElement.style.top = (y - top).toFixed(0) + \"px\";\r\n    }\r\n\r\n    public static hide(inputElement: HTMLInputElement) {\r\n        inputElement.style.display = \"none\";\r\n    }\r\n\r\n    public static show(inputElement: HTMLInputElement) {\r\n        inputElement.style.display = \"block\";\r\n    }\r\n\r\n    public static setSurroundingText(inputElement: HTMLInputElement, text: string, start: number, end: number) {\r\n        if (!inputElement) {\r\n            return;\r\n        }\r\n\r\n        inputElement.value = text;\r\n        inputElement.setSelectionRange(start, end);\r\n        inputElement.style.width = \"20px\";\r\n        inputElement.style.width = `${inputElement.scrollWidth}px`;\r\n    }\r\n\r\n    private static getModifiers(args: KeyboardEvent): RawInputModifiers {\r\n        let modifiers = RawInputModifiers.None;\r\n\r\n        if (args.ctrlKey) { modifiers |= RawInputModifiers.Control; }\r\n        if (args.altKey) { modifiers |= RawInputModifiers.Alt; }\r\n        if (args.shiftKey) { modifiers |= RawInputModifiers.Shift; }\r\n        if (args.metaKey) { modifiers |= RawInputModifiers.Meta; }\r\n\r\n        return modifiers;\r\n    }\r\n}\r\n", "export class AvaloniaDOM {\r\n    public static addClass(element: HTMLElement, className: string): void {\r\n        element.classList.add(className);\r\n    }\r\n\r\n    static createAvaloniaHost(host: HTMLElement) {\r\n        // Root element\r\n        host.classList.add(\"avalonia-container\");\r\n        host.tabIndex = 0;\r\n        host.oncontextmenu = function () { return false; };\r\n\r\n        // Rendering target canvas\r\n        const canvas = document.createElement(\"canvas\");\r\n        canvas.classList.add(\"avalonia-canvas\");\r\n        canvas.style.backgroundColor = \"#ccc\";\r\n        canvas.style.width = \"100%\";\r\n        canvas.style.height = \"100%\";\r\n        canvas.style.position = \"absolute\";\r\n\r\n        // Native controls host\r\n        const nativeHost = document.createElement(\"div\");\r\n        nativeHost.classList.add(\"avalonia-native-host\");\r\n        nativeHost.style.left = \"0px\";\r\n        nativeHost.style.top = \"0px\";\r\n        nativeHost.style.width = \"100%\";\r\n        nativeHost.style.height = \"100%\";\r\n        nativeHost.style.position = \"absolute\";\r\n\r\n        // IME\r\n        const inputElement = document.createElement(\"input\");\r\n        inputElement.classList.add(\"avalonia-input-element\");\r\n        inputElement.autocapitalize = \"none\";\r\n        inputElement.type = \"text\";\r\n        inputElement.spellcheck = false;\r\n        inputElement.style.padding = \"0\";\r\n        inputElement.style.margin = \"0\";\r\n        inputElement.style.position = \"absolute\";\r\n        inputElement.style.overflow = \"hidden\";\r\n        inputElement.style.borderStyle = \"hidden\";\r\n        inputElement.style.outline = \"none\";\r\n        inputElement.style.background = \"transparent\";\r\n        inputElement.style.color = \"transparent\";\r\n        inputElement.style.display = \"none\";\r\n        inputElement.style.height = \"20px\";\r\n        inputElement.onpaste = function () { return false; };\r\n        inputElement.oncopy = function () { return false; };\r\n        inputElement.oncut = function () { return false; };\r\n\r\n        host.prepend(inputElement);\r\n        host.prepend(nativeHost);\r\n        host.prepend(canvas);\r\n\r\n        return {\r\n            host,\r\n            canvas,\r\n            nativeHost,\r\n            inputElement\r\n        };\r\n    }\r\n}\r\n", "export class Caniuse {\r\n    public static canShowOpenFilePicker(): boolean {\r\n        return typeof window.showOpenFilePicker !== \"undefined\";\r\n    }\r\n\r\n    public static canShowSaveFilePicker(): boolean {\r\n        return typeof window.showSaveFilePicker !== \"undefined\";\r\n    }\r\n\r\n    public static canShowDirectoryPicker(): boolean {\r\n        return typeof window.showDirectoryPicker !== \"undefined\";\r\n    }\r\n}\r\n", "import { IMemoryView } from \"../../types/dotnet\";\r\n\r\nexport class StreamHelper {\r\n    public static async seek(stream: FileSystemWritableFileStream, position: number) {\r\n        return await stream.seek(position);\r\n    }\r\n\r\n    public static async truncate(stream: FileSystemWritableFileStream, size: number) {\r\n        return await stream.truncate(size);\r\n    }\r\n\r\n    public static async close(stream: FileSystemWritableFileStream) {\r\n        return await stream.close();\r\n    }\r\n\r\n    public static async write(stream: FileSystemWritableFileStream, span: IMemoryView) {\r\n        const array = new Uint8Array(span.byteLength);\r\n        span.copyTo(array);\r\n\r\n        const data: WriteParams = {\r\n            type: \"write\",\r\n            data: array\r\n        };\r\n\r\n        return await stream.write(data);\r\n    }\r\n\r\n    public static byteLength(stream: Blob) {\r\n        return stream.size;\r\n    }\r\n\r\n    public static async sliceArrayBuffer(stream: Blob, offset: number, count: number) {\r\n        const buffer = await stream.slice(offset, offset + count).arrayBuffer();\r\n        return new Uint8Array(buffer);\r\n    }\r\n\r\n    public static toMemoryView(buffer: Uint8Array): Uint8Array {\r\n        return buffer;\r\n    }\r\n}\r\n", "class NativeControlHostTopLevelAttachment {\r\n    _child?: HTMLElement;\r\n    _host?: HTMLElement;\r\n}\r\n\r\nexport class NativeControlHost {\r\n    public static createDefaultChild(parent?: HTMLElement): HTMLElement {\r\n        return document.createElement(\"div\");\r\n    }\r\n\r\n    public static createAttachment(): NativeControlHostTopLevelAttachment {\r\n        return new NativeControlHostTopLevelAttachment();\r\n    }\r\n\r\n    public static initializeWithChildHandle(element: NativeControlHostTopLevelAttachment, child: HTMLElement): void {\r\n        element._child = child;\r\n        element._child.style.position = \"absolute\";\r\n    }\r\n\r\n    public static attachTo(element: NativeControlHostTopLevelAttachment, host?: HTMLElement): void {\r\n        if (element._host && element._child) {\r\n            element._host.removeChild(element._child);\r\n        }\r\n\r\n        element._host = host;\r\n\r\n        if (element._host && element._child) {\r\n            element._host.appendChild(element._child);\r\n        }\r\n    }\r\n\r\n    public static showInBounds(element: NativeControlHostTopLevelAttachment, x: number, y: number, width: number, height: number): void {\r\n        if (element._child) {\r\n            element._child.style.top = `${y}px`;\r\n            element._child.style.left = `${x}px`;\r\n            element._child.style.width = `${width}px`;\r\n            element._child.style.height = `${height}px`;\r\n            element._child.style.display = \"block\";\r\n        }\r\n    }\r\n\r\n    public static hideWithSize(element: NativeControlHostTopLevelAttachment, width: number, height: number): void {\r\n        if (element._child) {\r\n            element._child.style.width = `${width}px`;\r\n            element._child.style.height = `${height}px`;\r\n            element._child.style.display = \"none\";\r\n        }\r\n    }\r\n\r\n    public static releaseChild(element: NativeControlHostTopLevelAttachment): void {\r\n        if (element._child) {\r\n            element._child = undefined;\r\n        }\r\n    }\r\n}\r\n", "import { RuntimeAPI } from \"../types/dotnet\";\r\nimport { SizeWatcher, DpiWatcher, Canvas } from \"./avalonia/canvas\";\r\nimport { InputHelper } from \"./avalonia/input\";\r\nimport { AvaloniaDOM } from \"./avalonia/dom\";\r\nimport { Caniuse } from \"./avalonia/caniuse\";\r\nimport { StreamHelper } from \"./avalonia/stream\";\r\nimport { NativeControlHost } from \"./avalonia/nativeControlHost\";\r\n\r\nexport async function createAvaloniaRuntime(api: RuntimeAPI): Promise<void> {\r\n    api.setModuleImports(\"avalonia.ts\", {\r\n        Caniuse,\r\n        Canvas,\r\n        InputHelper,\r\n        SizeWatcher,\r\n        DpiWatcher,\r\n        AvaloniaDOM,\r\n        StreamHelper,\r\n        NativeControlHost\r\n    });\r\n}\r\n"],
  "mappings": "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",
  "names": []
}
