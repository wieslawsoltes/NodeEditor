{
  "version": 3,
  "sources": ["../webapp/node_modules/native-file-system-adapter/src/config.js", "../webapp/node_modules/native-file-system-adapter/src/adapters/memory.js", "../webapp/node_modules/native-file-system-adapter/src/adapters/sandbox.js", "../webapp/node_modules/native-file-system-adapter/src/FileSystemHandle.js", "../webapp/node_modules/native-file-system-adapter/src/FileSystemWritableFileStream.js", "../webapp/node_modules/native-file-system-adapter/src/FileSystemFileHandle.js", "../webapp/node_modules/native-file-system-adapter/src/FileSystemDirectoryHandle.js", "../webapp/node_modules/native-file-system-adapter/src/util.js", "../webapp/modules/storage/indexedDb.ts", "../webapp/modules/avalonia/caretHelper.ts", "../webapp/modules/avalonia/caniuse.ts", "../webapp/modules/storage/storageItem.ts", "../webapp/node_modules/native-file-system-adapter/src/showDirectoryPicker.js", "../webapp/node_modules/native-file-system-adapter/src/showOpenFilePicker.js", "../webapp/node_modules/native-file-system-adapter/src/showSaveFilePicker.js", "../webapp/node_modules/native-file-system-adapter/src/getOriginPrivateDirectory.js", "../webapp/node_modules/native-file-system-adapter/src/es6.js", "../webapp/modules/storage/storageProvider.ts"],
  "sourcesContent": ["const config = {\n  ReadableStream: globalThis.ReadableStream,\n  WritableStream: globalThis.WritableStream,\n  TransformStream: globalThis.TransformStream,\n  DOMException: globalThis.DOMException,\n  Blob: globalThis.Blob,\n  File: globalThis.File,\n}\n\nexport default config\n", "import { errors } from '../util.js'\nimport config from '../config.js'\n\nconst { File, Blob, DOMException } = config\nconst { INVALID, GONE, MISMATCH, MOD_ERR, SYNTAX, SECURITY, DISALLOWED } = errors\n\nexport class Sink {\n\n  /**\n   * @param {FileHandle} fileHandle\n   * @param {File} file\n   */\n  constructor (fileHandle, file) {\n    this.fileHandle = fileHandle\n    this.file = file\n    this.size = file.size\n    this.position = 0\n  }\n\n  write (chunk) {\n    let file = this.file\n\n    if (typeof chunk === 'object') {\n      if (chunk.type === 'write') {\n        if (Number.isInteger(chunk.position) && chunk.position >= 0) {\n          this.position = chunk.position\n          if (this.size < chunk.position) {\n            this.file = new File(\n              [this.file, new ArrayBuffer(chunk.position - this.size)],\n              this.file.name,\n              this.file\n            )\n          }\n        }\n        if (!('data' in chunk)) {\n          throw new DOMException(...SYNTAX('write requires a data argument'))\n        }\n        chunk = chunk.data\n      } else if (chunk.type === 'seek') {\n        if (Number.isInteger(chunk.position) && chunk.position >= 0) {\n          if (this.size < chunk.position) {\n            throw new DOMException(...INVALID)\n          }\n          this.position = chunk.position\n          return\n        } else {\n          throw new DOMException(...SYNTAX('seek requires a position argument'))\n        }\n      } else if (chunk.type === 'truncate') {\n        if (Number.isInteger(chunk.size) && chunk.size >= 0) {\n          file = chunk.size < this.size\n            ? new File([file.slice(0, chunk.size)], file.name, file)\n            : new File([file, new Uint8Array(chunk.size - this.size)], file.name)\n\n          this.size = file.size\n          if (this.position > file.size) {\n            this.position = file.size\n          }\n          this.file = file\n          return\n        } else {\n          throw new DOMException(...SYNTAX('truncate requires a size argument'))\n        }\n      }\n    }\n\n    chunk = new Blob([chunk])\n\n    let blob = this.file\n    // Calc the head and tail fragments\n    const head = blob.slice(0, this.position)\n    const tail = blob.slice(this.position + chunk.size)\n\n    // Calc the padding\n    let padding = this.position - head.size\n    if (padding < 0) {\n      padding = 0\n    }\n    blob = new File([\n      head,\n      new Uint8Array(padding),\n      chunk,\n      tail\n    ], blob.name)\n\n    this.size = blob.size\n    this.position += chunk.size\n\n    this.file = blob\n  }\n  close () {\n    if (this.fileHandle._deleted) throw new DOMException(...GONE)\n    this.fileHandle._file = this.file\n    this.file =\n    this.position =\n    this.size = null\n    if (this.fileHandle.onclose) {\n      this.fileHandle.onclose(this.fileHandle)\n    }\n  }\n}\n\nexport class FileHandle {\n  constructor (name = '', file = new File([], name), writable = true) {\n    this._file = file\n    this.name = name\n    this.kind = 'file'\n    this._deleted = false\n    this.writable = writable\n    this.readable = true\n  }\n\n  async getFile () {\n    if (this._deleted) throw new DOMException(...GONE)\n    return this._file\n  }\n\n  async createWritable (opts) {\n    if (!this.writable) throw new DOMException(...DISALLOWED)\n    if (this._deleted) throw new DOMException(...GONE)\n\n    const file = opts.keepExistingData\n      ? await this.getFile()\n      : new File([], this.name)\n\n    return new Sink(this, file)\n  }\n\n  async isSameEntry (other) {\n    return this === other\n  }\n\n  async _destroy () {\n    this._deleted = true\n    this._file = null\n  }\n}\n\nexport class FolderHandle {\n\n  /** @param {string} name */\n  constructor (name, writable = true) {\n    this.name = name\n    this.kind = 'directory'\n    this._deleted = false\n    /** @type {Object.<string, (FolderHandle|FileHandle)>} */\n    this._entries = {}\n    this.writable = writable\n    this.readable = true\n  }\n\n  /** @returns {AsyncGenerator<[string, FileHandle | FolderHandle]>} */\n  async * entries () {\n    if (this._deleted) throw new DOMException(...GONE)\n    yield* Object.entries(this._entries)\n  }\n\n  async isSameEntry (other) {\n    return this === other\n  }\n\n  /**\n   * @param {string} name\n   * @param {{ create: boolean; }} opts\n   */\n  async getDirectoryHandle (name, opts) {\n    if (this._deleted) throw new DOMException(...GONE)\n    const entry = this._entries[name]\n    if (entry) { // entry exist\n      if (entry instanceof FileHandle) {\n        throw new DOMException(...MISMATCH)\n      } else {\n        return entry\n      }\n    } else {\n      if (opts.create) {\n        return (this._entries[name] = new FolderHandle(name))\n      } else {\n        throw new DOMException(...GONE)\n      }\n    }\n  }\n\n  /**\n   * @param {string} name\n   * @param {{ create: boolean; }} opts\n   */\n  async getFileHandle (name, opts) {\n    const entry = this._entries[name]\n    const isFile = entry instanceof FileHandle\n    if (entry && isFile) return entry\n    if (entry && !isFile) throw new DOMException(...MISMATCH)\n    if (!entry && !opts.create) throw new DOMException(...GONE)\n    if (!entry && opts.create) {\n      return (this._entries[name] = new FileHandle(name))\n    }\n  }\n\n  async removeEntry (name, opts) {\n    const entry = this._entries[name]\n    if (!entry) throw new DOMException(...GONE)\n    await entry._destroy(opts.recursive)\n    delete this._entries[name]\n  }\n\n  async _destroy (recursive) {\n    for (let x of Object.values(this._entries)) {\n      if (!recursive) throw new DOMException(...MOD_ERR)\n      await x._destroy(recursive)\n    }\n    this._entries = {}\n    this._deleted = true\n  }\n}\n\nconst fs = new FolderHandle('')\n\nexport default () => fs\n", "/* global Blob, DOMException */\n\nimport { errors } from '../util.js'\n\nconst { DISALLOWED } = errors\n\nclass Sink {\n  /**\n   * @param {FileWriter} writer\n   * @param {FileEntry} fileEntry\n   */\n  constructor (writer, fileEntry) {\n    this.writer = writer\n    this.fileEntry = fileEntry\n  }\n\n  /**\n   * @param {BlobPart | Object} chunk\n   */\n  async write (chunk) {\n    if (typeof chunk === 'object') {\n      if (chunk.type === 'write') {\n        if (Number.isInteger(chunk.position) && chunk.position >= 0) {\n          this.writer.seek(chunk.position)\n          if (this.writer.position !== chunk.position) {\n            await new Promise((resolve, reject) => {\n              this.writer.onwriteend = resolve\n              this.writer.onerror = reject\n              this.writer.truncate(chunk.position)\n            })\n            this.writer.seek(chunk.position)\n          }\n        }\n        if (!('data' in chunk)) {\n          throw new DOMException('Failed to execute \\'write\\' on \\'UnderlyingSinkBase\\': Invalid params passed. write requires a data argument', 'SyntaxError')\n        }\n        chunk = chunk.data\n      } else if (chunk.type === 'seek') {\n        if (Number.isInteger(chunk.position) && chunk.position >= 0) {\n          this.writer.seek(chunk.position)\n          if (this.writer.position !== chunk.position) {\n            throw new DOMException('seeking position failed', 'InvalidStateError')\n          }\n          return\n        } else {\n          throw new DOMException('Failed to execute \\'write\\' on \\'UnderlyingSinkBase\\': Invalid params passed. seek requires a position argument', 'SyntaxError')\n        }\n      } else if (chunk.type === 'truncate') {\n        return new Promise(resolve => {\n          if (Number.isInteger(chunk.size) && chunk.size >= 0) {\n            this.writer.onwriteend = evt => resolve()\n            this.writer.truncate(chunk.size)\n          } else {\n            throw new DOMException('Failed to execute \\'write\\' on \\'UnderlyingSinkBase\\': Invalid params passed. truncate requires a size argument', 'SyntaxError')\n          }\n        })\n      }\n    }\n    await new Promise((resolve, reject) => {\n      this.writer.onwriteend = resolve\n      this.writer.onerror = reject\n      this.writer.write(new Blob([chunk]))\n    })\n  }\n\n  close () {\n    return new Promise(this.fileEntry.file.bind(this.fileEntry))\n  }\n}\n\nexport class FileHandle {\n  /** @param {FileEntry} file */\n  constructor (file, writable = true) {\n    this.file = file\n    this.kind = 'file'\n    this.writable = writable\n    this.readable = true\n  }\n\n  get name () {\n    return this.file.name\n  }\n\n  /**\n   * @param {{ file: { toURL: () => string; }; }} other\n   */\n  isSameEntry (other) {\n    return this.file.toURL() === other.file.toURL()\n  }\n\n  /** @return {Promise<File>} */\n  getFile () {\n    return new Promise(this.file.file.bind(this.file))\n  }\n\n  /** @return {Promise<Sink>} */\n  createWritable (opts) {\n    if (!this.writable) throw new DOMException(...DISALLOWED)\n\n    return new Promise((resolve, reject) =>\n      this.file.createWriter(fileWriter => {\n        if (opts.keepExistingData === false) {\n          fileWriter.onwriteend = evt => resolve(new Sink(fileWriter, this.file))\n          fileWriter.truncate(0)\n        } else {\n          resolve(new Sink(fileWriter, this.file))\n        }\n      }, reject)\n    )\n  }\n}\n\nexport class FolderHandle {\n  /** @param {DirectoryEntry} dir */\n  constructor (dir, writable = true) {\n    this.dir = dir\n    this.writable = writable\n    this.readable = true\n    this.kind = 'directory'\n    this.name = dir.name\n  }\n\n  /** @param {FolderHandle} other */\n  isSameEntry (other) {\n    return this.dir.fullPath === other.dir.fullPath\n  }\n\n  /** @returns {AsyncGenerator<[string, FileHandle | FolderHandle]>} */\n  async * entries () {\n    const reader = this.dir.createReader()\n    const entries = await new Promise(reader.readEntries.bind(reader))\n    for (const x of entries) {\n      yield [x.name, x.isFile ? new FileHandle(x, this.writable) : new FolderHandle(x, this.writable)]\n    }\n  }\n\n  /**\n   * @param {string} name\n   * @param {{ create: boolean; }} opts\n   * @returns {Promise<FolderHandle>}\n   */\n  getDirectoryHandle (name, opts) {\n    return new Promise((resolve, reject) => {\n      this.dir.getDirectory(name, opts, dir => {\n        resolve(new FolderHandle(dir))\n      }, reject)\n    })\n  }\n\n  /**\n   * @param {string} name\n   * @param {{ create: boolean; }} opts\n   * @returns {Promise<FileHandle>}\n   */\n  getFileHandle (name, opts) {\n    return new Promise((resolve, reject) =>\n      this.dir.getFile(name, opts, file => resolve(new FileHandle(file)), reject)\n    )\n  }\n\n  /**\n   * @param {string} name\n   * @param {{ recursive: boolean; }} opts\n   */\n  async removeEntry (name, opts) {\n    /** @type {Error|FolderHandle|FileHandle} */\n    const entry = await this.getDirectoryHandle(name, { create: false }).catch(err =>\n      err.name === 'TypeMismatchError' ? this.getFileHandle(name, { create: false }) : err\n    )\n\n    if (entry instanceof Error) throw entry\n\n    return new Promise((resolve, reject) => {\n      if (entry instanceof FolderHandle) {\n        opts.recursive\n          ? entry.dir.removeRecursively(() => resolve(), reject)\n          : entry.dir.remove(() => resolve(), reject)\n      } else if (entry.file) {\n        entry.file.remove(() => resolve(), reject)\n      }\n    })\n  }\n}\n\nexport default (opts = {}) => new Promise((resolve, reject) =>\n  window.webkitRequestFileSystem(\n    opts._persistent, 0,\n    e => resolve(new FolderHandle(e.root)),\n    reject\n  )\n)\n", "const kAdapter = Symbol('adapter')\n\nclass FileSystemHandle {\n  /** @type {FileSystemHandle} */\n  [kAdapter]\n\n  /** @type {string} */\n  name\n  /** @type {('file'|'directory')} */\n  kind\n\n  /** @param {FileSystemHandle & {writable}} adapter */\n  constructor (adapter) {\n    this.kind = adapter.kind\n    this.name = adapter.name\n    this[kAdapter] = adapter\n  }\n\n  async queryPermission ({mode = 'read'} = {}) {\n    const handle = this[kAdapter]\n\n    if (handle.queryPermission) {\n      return handle.queryPermission({mode})\n    }\n\n    if (mode === 'read') {\n      return 'granted'\n    } else if (mode === 'readwrite') {\n      return handle.writable ? 'granted' : 'denied'\n    } else {\n      throw new TypeError(`Mode ${mode} must be 'read' or 'readwrite'`)\n    }\n  }\n\n  async requestPermission ({mode = 'read'} = {}) {\n    const handle = this[kAdapter]\n    if (handle.requestPermission) {\n      return handle.requestPermission({mode})\n    }\n\n    if (mode === 'read') {\n      return 'granted'\n    } else if (mode === 'readwrite') {\n      return handle.writable ? 'granted' : 'denied'\n    } else {\n      throw new TypeError(`Mode ${mode} must be 'read' or 'readwrite'`)\n    }\n  }\n\n  /**\n   * Attempts to remove the entry represented by handle from the underlying file system.\n   *\n   * @param {object} options\n   * @param {boolean} [options.recursive=false]\n   */\n  async remove (options = {}) {\n    await this[kAdapter].remove(options)\n  }\n\n  /**\n   * @param {FileSystemHandle} other\n   */\n  async isSameEntry (other) {\n    if (this === other) return true\n    if (\n      (!other) ||\n      (typeof other !== 'object') ||\n      (this.kind !== other.kind) ||\n      (!other[kAdapter])\n    ) return false\n    return this[kAdapter].isSameEntry(other[kAdapter])\n  }\n}\n\nObject.defineProperty(FileSystemHandle.prototype, Symbol.toStringTag, {\n  value: 'FileSystemHandle',\n  writable: false,\n  enumerable: false,\n  configurable: true\n})\n\nexport default FileSystemHandle\nexport { FileSystemHandle }\n", "import config from './config.js'\n\nconst { WritableStream } = config\n\nclass FileSystemWritableFileStream extends WritableStream {\n  constructor (...args) {\n    super(...args)\n\n    // Stupid Safari hack to extend native classes\n    // https://bugs.webkit.org/show_bug.cgi?id=226201\n    Object.setPrototypeOf(this, FileSystemWritableFileStream.prototype)\n\n    /** @private */\n    this._closed = false\n  }\n\n  close () {\n    this._closed = true\n    const w = this.getWriter()\n    const p = w.close()\n    w.releaseLock()\n    return p\n    // return super.close ? super.close() : this.getWriter().close()\n  }\n\n  /** @param {number} position */\n  seek (position) {\n    return this.write({ type: 'seek', position })\n  }\n\n  /** @param {number} size */\n  truncate (size) {\n    return this.write({ type: 'truncate', size })\n  }\n\n  write (data) {\n    if (this._closed) {\n      return Promise.reject(new TypeError('Cannot write to a CLOSED writable stream'))\n    }\n\n    const writer = this.getWriter()\n    const p = writer.write(data)\n    writer.releaseLock()\n    return p\n  }\n}\n\nObject.defineProperty(FileSystemWritableFileStream.prototype, Symbol.toStringTag, {\n  value: 'FileSystemWritableFileStream',\n  writable: false,\n  enumerable: false,\n  configurable: true\n})\n\nObject.defineProperties(FileSystemWritableFileStream.prototype, {\n  close: { enumerable: true },\n  seek: { enumerable: true },\n  truncate: { enumerable: true },\n  write: { enumerable: true }\n})\n\nexport default FileSystemWritableFileStream\nexport { FileSystemWritableFileStream }\n", "import FileSystemHandle from './FileSystemHandle.js'\nimport FileSystemWritableFileStream from './FileSystemWritableFileStream.js'\n\nconst kAdapter = Symbol('adapter')\n\nclass FileSystemFileHandle extends FileSystemHandle {\n  /** @type {FileSystemFileHandle} */\n  [kAdapter]\n\n  constructor (adapter) {\n    super(adapter)\n    this[kAdapter] = adapter\n  }\n\n  /**\n   * @param  {Object} [options={}]\n   * @param  {boolean} [options.keepExistingData]\n   * @returns {Promise<FileSystemWritableFileStream>}\n   */\n  async createWritable (options = {}) {\n    return new FileSystemWritableFileStream(\n      await this[kAdapter].createWritable(options)\n    )\n  }\n\n  /**\n   * @returns {Promise<File>}\n   */\n  async getFile () {\n    return this[kAdapter].getFile()\n  }\n}\n\nObject.defineProperty(FileSystemFileHandle.prototype, Symbol.toStringTag, {\n  value: 'FileSystemFileHandle',\n  writable: false,\n  enumerable: false,\n  configurable: true\n})\n\nObject.defineProperties(FileSystemFileHandle.prototype, {\n  createWritable: { enumerable: true },\n  getFile: { enumerable: true }\n})\n\nexport default FileSystemFileHandle\nexport { FileSystemFileHandle }\n", "import FileSystemHandle from './FileSystemHandle.js'\n\nconst kAdapter = Symbol('adapter')\n\nclass FileSystemDirectoryHandle extends FileSystemHandle {\n  /** @type {FileSystemDirectoryHandle} */\n  [kAdapter]\n\n  constructor (adapter) {\n    super(adapter)\n    this[kAdapter] = adapter\n  }\n\n  /**\n   * @param {string} name Name of the directory\n   * @param {object} [options]\n   * @param {boolean} [options.create] create the directory if don't exist\n   * @returns {Promise<FileSystemDirectoryHandle>}\n   */\n  async getDirectoryHandle (name, options = {}) {\n    if (name === '') {\n      throw new TypeError(`Name can't be an empty string.`)\n    }\n    if (name === '.' || name === '..' || name.includes('/')) {\n      throw new TypeError(`Name contains invalid characters.`)\n    }\n    options.create = !!options.create\n    const handle = await this[kAdapter].getDirectoryHandle(name, options)\n    return new FileSystemDirectoryHandle(handle)\n  }\n\n  /** @returns {AsyncGenerator<[string, FileSystemHandle | FileSystemDirectoryHandle]>} */\n  async * entries () {\n    const {FileSystemFileHandle} = await import('./FileSystemFileHandle.js')\n\n    for await (const [_, entry] of this[kAdapter].entries())\n      yield [entry.name, entry.kind === 'file'\n        ? new FileSystemFileHandle(entry)\n        : new FileSystemDirectoryHandle(entry)]\n  }\n\n  /** @deprecated use .entries() instead */\n  async * getEntries() {\n    const {FileSystemFileHandle} = await import('./FileSystemFileHandle.js')\n    console.warn('deprecated, use .entries() instead')\n    for await (let entry of this[kAdapter].entries())\n      yield entry.kind === 'file'\n        ? new FileSystemFileHandle(entry)\n        : new FileSystemDirectoryHandle(entry)\n  }\n\n  /**\n   * @param {string} name Name of the file\n   * @param {object} [options]\n   * @param {boolean} [options.create] create the file if don't exist\n   */\n  async getFileHandle (name, options = {}) {\n    const {FileSystemFileHandle} = await import('./FileSystemFileHandle.js')\n    if (name === '') throw new TypeError(`Name can't be an empty string.`)\n    if (name === '.' || name === '..' || name.includes('/')) {\n      throw new TypeError(`Name contains invalid characters.`)\n    }\n    options.create = !!options.create\n    const handle = await this[kAdapter].getFileHandle(name, options)\n    return new FileSystemFileHandle(handle)\n  }\n\n  /**\n   * @param {string} name\n   * @param {object} [options]\n   * @param {boolean} [options.recursive]\n   */\n  async removeEntry (name, options = {}) {\n    if (name === '') {\n      throw new TypeError(`Name can't be an empty string.`)\n    }\n    if (name === '.' || name === '..' || name.includes('/')) {\n      throw new TypeError(`Name contains invalid characters.`)\n    }\n    options.recursive = !!options.recursive // cuz node's fs.rm require boolean\n    return this[kAdapter].removeEntry(name, options)\n  }\n\n  async resolve (possibleDescendant) {\n    if (await possibleDescendant.isSameEntry(this)) {\n      return []\n    }\n\n    const openSet = [{ handle: this, path: [] }]\n\n    while (openSet.length) {\n      let { handle: current, path } = openSet.pop()\n      for await (const entry of current.values()) {\n        if (await entry.isSameEntry(possibleDescendant)) {\n          return [...path, entry.name]\n        }\n        if (entry.kind === 'directory') {\n          openSet.push({ handle: entry, path: [...path, entry.name] })\n        }\n      }\n    }\n\n    return null\n  }\n\n  async * keys () {\n    for await (const [name] of this[kAdapter].entries())\n      yield name\n  }\n\n  async * values () {\n    for await (const [_, entry] of this)\n      yield entry\n  }\n\n  [Symbol.asyncIterator]() {\n    return this.entries()\n  }\n}\n\nObject.defineProperty(FileSystemDirectoryHandle.prototype, Symbol.toStringTag, {\n\tvalue: 'FileSystemDirectoryHandle',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n})\n\nObject.defineProperties(FileSystemDirectoryHandle.prototype, {\n\tgetDirectoryHandle: { enumerable: true },\n\tentries: { enumerable: true },\n\tgetFileHandle: { enumerable: true },\n\tremoveEntry: { enumerable: true }\n})\n\nexport default FileSystemDirectoryHandle\nexport { FileSystemDirectoryHandle }\n", "export const errors = {\n  INVALID: ['seeking position failed.', 'InvalidStateError'],\n  GONE: ['A requested file or directory could not be found at the time an operation was processed.', 'NotFoundError'],\n  MISMATCH: ['The path supplied exists, but was not an entry of requested type.', 'TypeMismatchError'],\n  MOD_ERR: ['The object can not be modified in this way.', 'InvalidModificationError'],\n  SYNTAX: m => [`Failed to execute 'write' on 'UnderlyingSinkBase': Invalid params passed. ${m}`, 'SyntaxError'],\n  SECURITY: ['It was determined that certain files are unsafe for access within a Web application, or that too many calls are being made on file resources.', 'SecurityError'],\n  DISALLOWED: ['The request is not allowed by the user agent or the platform in the current context.', 'NotAllowedError']\n}\n\nexport const config = {\n  writable: globalThis.WritableStream\n}\n\nexport async function fromDataTransfer (entries) {\n  console.warn('deprecated fromDataTransfer - use `dt.items[0].getAsFileSystemHandle()` instead')\n  const [memory, sandbox, fs] = await Promise.all([\n    import('./adapters/memory.js'),\n    import('./adapters/sandbox.js'),\n    import('./FileSystemDirectoryHandle.js')\n  ])\n\n  const folder = new memory.FolderHandle('', false)\n  folder._entries = entries.map(entry => entry.isFile\n    ? new sandbox.FileHandle(entry, false)\n    : new sandbox.FolderHandle(entry, false)\n  )\n\n  return new fs.FileSystemDirectoryHandle(folder)\n}\n\nexport async function getDirHandlesFromInput (input) {\n  const { FolderHandle, FileHandle } = await import('./adapters/memory.js')\n  const { FileSystemDirectoryHandle } = await import('./FileSystemDirectoryHandle.js')\n\n  const files = Array.from(input.files)\n  const rootName = files[0].webkitRelativePath.split('/', 1)[0]\n  const root = new FolderHandle(rootName, false)\n\n  files.forEach(file => {\n    const path = file.webkitRelativePath.split('/')\n    path.shift()\n    const name = path.pop()\n\n    const dir = path.reduce((dir, path) => {\n      if (!dir._entries[path]) dir._entries[path] = new FolderHandle(path, false)\n      return dir._entries[path]\n    }, root)\n\n    dir._entries[name] = new FileHandle(file.name, file, false)\n  })\n\n  return new FileSystemDirectoryHandle(root)\n}\n\nexport async function getFileHandlesFromInput (input) {\n  const { FileHandle } = await import('./adapters/memory.js')\n  const { FileSystemFileHandle } = await import('./FileSystemFileHandle.js')\n\n  return Array.from(input.files).map(file =>\n    new FileSystemFileHandle(new FileHandle(file.name, file, false))\n  )\n}\n", "class InnerDbConnection {\r\n    constructor(private readonly database: IDBDatabase) { }\r\n\r\n    private openStore(store: string, mode: IDBTransactionMode): IDBObjectStore {\r\n        const tx = this.database.transaction(store, mode);\r\n        return tx.objectStore(store);\r\n    }\r\n\r\n    public async put(store: string, obj: any, key?: IDBValidKey): Promise<IDBValidKey> {\r\n        const os = this.openStore(store, \"readwrite\");\r\n\r\n        return await new Promise((resolve, reject) => {\r\n            const response = os.put(obj, key);\r\n            response.onsuccess = () => {\r\n                resolve(response.result);\r\n            };\r\n            response.onerror = () => {\r\n                reject(response.error);\r\n            };\r\n        });\r\n    }\r\n\r\n    public get(store: string, key: IDBValidKey): any {\r\n        const os = this.openStore(store, \"readonly\");\r\n\r\n        return new Promise((resolve, reject) => {\r\n            const response = os.get(key);\r\n            response.onsuccess = () => {\r\n                resolve(response.result);\r\n            };\r\n            response.onerror = () => {\r\n                reject(response.error);\r\n            };\r\n        });\r\n    }\r\n\r\n    public async delete(store: string, key: IDBValidKey): Promise<void> {\r\n        const os = this.openStore(store, \"readwrite\");\r\n\r\n        return await new Promise((resolve, reject) => {\r\n            const response = os.delete(key);\r\n            response.onsuccess = () => {\r\n                resolve();\r\n            };\r\n            response.onerror = () => {\r\n                reject(response.error);\r\n            };\r\n        });\r\n    }\r\n\r\n    public close() {\r\n        this.database.close();\r\n    }\r\n}\r\n\r\nclass IndexedDbWrapper {\r\n    constructor(private readonly databaseName: string, private readonly objectStores: [string]) {\r\n    }\r\n\r\n    public async connect(): Promise<InnerDbConnection> {\r\n        const conn = window.indexedDB.open(this.databaseName, 1);\r\n\r\n        conn.onupgradeneeded = event => {\r\n            const db = (event.target as IDBRequest<IDBDatabase>).result;\r\n            this.objectStores.forEach(store => {\r\n                db.createObjectStore(store);\r\n            });\r\n        };\r\n\r\n        return await new Promise((resolve, reject) => {\r\n            conn.onsuccess = event => {\r\n                resolve(new InnerDbConnection((event.target as IDBRequest<IDBDatabase>).result));\r\n            };\r\n            conn.onerror = event => {\r\n                reject((event.target as IDBRequest<IDBDatabase>).error);\r\n            };\r\n        });\r\n    }\r\n}\r\n\r\nexport const fileBookmarksStore: string = \"fileBookmarks\";\r\nexport const avaloniaDb = new IndexedDbWrapper(\"AvaloniaDb\", [\r\n    fileBookmarksStore\r\n]);\r\n", "// Based on https://github.com/component/textarea-caret-position/blob/master/index.js\r\nexport class CaretHelper {\r\n    public static getCaretCoordinates(\r\n        element: HTMLInputElement | HTMLTextAreaElement,\r\n        position: number,\r\n        options?: { debug: boolean }\r\n    ) {\r\n        if (!isBrowser) {\r\n            throw new Error(\r\n                \"textarea-caret-position#getCaretCoordinates should only be called in a browser\"\r\n            );\r\n        }\r\n\r\n        const debug = options?.debug ?? false;\r\n        if (debug) {\r\n            const el = document.querySelector(\r\n                \"#input-textarea-caret-position-mirror-div\"\r\n            );\r\n            if (el) el.parentNode?.removeChild(el);\r\n        }\r\n\r\n        // The mirror div will replicate the textarea's style\r\n        const div = document.createElement(\"div\");\r\n        div.id = \"input-textarea-caret-position-mirror-div\";\r\n        document.body.appendChild(div);\r\n\r\n        const style = div.style;\r\n        const computed = window.getComputedStyle\r\n            ? window.getComputedStyle(element)\r\n            : ((element as any).currentStyle as CSSStyleDeclaration); // currentStyle for IE < 9\r\n        const isInput = element.nodeName === \"INPUT\";\r\n\r\n        // Default textarea styles\r\n        style.whiteSpace = \"pre-wrap\";\r\n        if (!isInput) style.wordWrap = \"break-word\"; // only for textarea-s\r\n\r\n        // Position off-screen\r\n        style.position = \"absolute\"; // required to return coordinates properly\r\n        if (!debug) style.visibility = \"hidden\"; // not 'display: none' because we want rendering\r\n\r\n        // Transfer the element's properties to the div\r\n        properties.forEach((prop: string) => {\r\n            if (isInput && prop === \"lineHeight\") {\r\n                // Special case for <input>s because text is rendered centered and line height may be != height\r\n                if (computed.boxSizing === \"border-box\") {\r\n                    const height = parseInt(computed.height);\r\n                    const outerHeight =\r\n                        parseInt(computed.paddingTop) +\r\n                        parseInt(computed.paddingBottom) +\r\n                        parseInt(computed.borderTopWidth) +\r\n                        parseInt(computed.borderBottomWidth);\r\n                    const targetHeight = outerHeight + parseInt(computed.lineHeight);\r\n                    if (height > targetHeight) {\r\n                        style.lineHeight = `${height - outerHeight}px`;\r\n                    } else if (height === targetHeight) {\r\n                        style.lineHeight = computed.lineHeight;\r\n                    } else {\r\n                        style.lineHeight = \"0\";\r\n                    }\r\n                } else {\r\n                    style.lineHeight = computed.height;\r\n                }\r\n            } else {\r\n                (style as any)[prop] = (computed as any)[prop];\r\n            }\r\n        });\r\n\r\n        if (isFirefox) {\r\n            // Firefox lies about the overflow property for textareas: https://bugzilla.mozilla.org/show_bug.cgi?id=984275\r\n            if (element.scrollHeight > parseInt(computed.height)) {\r\n                style.overflowY = \"scroll\";\r\n            }\r\n        } else {\r\n            style.overflow = \"hidden\"; // for Chrome to not render a scrollbar; IE keeps overflowY = 'scroll'\r\n        }\r\n\r\n        div.textContent = element.value.substring(0, position);\r\n        // The second special handling for input type=\"text\" vs textarea:\r\n        // spaces need to be replaced with non-breaking spaces - http://stackoverflow.com/a/13402035/1269037\r\n        if (isInput) div.textContent = div.textContent.replace(/\\s/g, \"\\u00a0\");\r\n\r\n        const span = document.createElement(\"span\");\r\n        // Wrapping must be replicated *exactly*, including when a long word gets\r\n        // onto the next line, with whitespace at the end of the line before (#7).\r\n        // The  *only* reliable way to do that is to copy the *entire* rest of the\r\n        // textarea's content into the <span> created at the caret position.\r\n        // For inputs, just '.' would be enough, but no need to bother.\r\n        span.textContent = element.value.substring(position) || \".\"; // || because a completely empty faux span doesn't render at all\r\n        div.appendChild(span);\r\n\r\n        const coordinates = {\r\n            top: span.offsetTop + parseInt(computed.borderTopWidth),\r\n            left: span.offsetLeft + parseInt(computed.borderLeftWidth),\r\n            height: parseInt(computed.lineHeight)\r\n        };\r\n\r\n        if (debug) {\r\n            span.style.backgroundColor = \"#aaa\";\r\n        } else {\r\n            document.body.removeChild(div);\r\n        }\r\n\r\n        return coordinates;\r\n    }\r\n}\r\n\r\nconst properties = [\r\n    \"direction\", // RTL support\r\n    \"boxSizing\",\r\n    \"width\", // on Chrome and IE, exclude the scrollbar, so the mirror div wraps exactly as the textarea does\r\n    \"height\",\r\n    \"overflowX\",\r\n    \"overflowY\", // copy the scrollbar for IE\r\n\r\n    \"borderTopWidth\",\r\n    \"borderRightWidth\",\r\n    \"borderBottomWidth\",\r\n    \"borderLeftWidth\",\r\n    \"borderStyle\",\r\n\r\n    \"paddingTop\",\r\n    \"paddingRight\",\r\n    \"paddingBottom\",\r\n    \"paddingLeft\",\r\n\r\n    // https://developer.mozilla.org/en-US/docs/Web/CSS/font\r\n    \"fontStyle\",\r\n    \"fontVariant\",\r\n    \"fontWeight\",\r\n    \"fontStretch\",\r\n    \"fontSize\",\r\n    \"fontSizeAdjust\",\r\n    \"lineHeight\",\r\n    \"fontFamily\",\r\n\r\n    \"textAlign\",\r\n    \"textTransform\",\r\n    \"textIndent\",\r\n    \"textDecoration\", // might not make a difference, but better be safe\r\n\r\n    \"letterSpacing\",\r\n    \"wordSpacing\",\r\n\r\n    \"tabSize\",\r\n    \"MozTabSize\"\r\n];\r\n\r\nconst isBrowser = typeof window !== \"undefined\";\r\nconst isFirefox = isBrowser && (window as any).mozInnerScreenX != null;\r\n", "export class Caniuse {\r\n    public static hasNativeFilePicker(): boolean {\r\n        return \"showSaveFilePicker\" in globalThis;\r\n    }\r\n\r\n    public static isMobile(): boolean {\r\n        const userAgentData = (globalThis.navigator as any)?.userAgentData;\r\n        if (userAgentData) {\r\n            return userAgentData.mobile;\r\n        }\r\n\r\n        const userAgent = navigator.userAgent;\r\n        const regex1 = /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i;\r\n        const regex2 = /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw(n|u)|c55\\/|capi|ccwa|cdm|cell|chtm|cldc|cmd|co(mp|nd)|craw|da(it|ll|ng)|dbte|dcs|devi|dica|dmob|do(c|p)o|ds(12|d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(|_)|g1 u|g560|gene|gf5|gmo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd(m|p|t)|hei|hi(pt|ta)|hp( i|ip)|hsc|ht(c(| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i(20|go|ma)|i230|iac( ||\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|[a-w])|libw|lynx|m1w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|mcr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|([1-8]|c))|phil|pire|pl(ay|uc)|pn2|po(ck|rt|se)|prox|psio|ptg|qaa|qc(07|12|21|32|60|[2-7]|i)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h|oo|p)|sdk\\/|se(c(|0|1)|47|mc|nd|ri)|sgh|shar|sie(|m)|sk0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h|v|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl|tdg|tel(i|m)|tim|tmo|to(pl|sh)|ts(70|m|m3|m5)|tx9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas|your|zeto|zte/i;\r\n        return regex1.test(userAgent) || regex2.test(userAgent.substr(0, 4));\r\n    }\r\n}\r\n", "import { avaloniaDb, fileBookmarksStore } from \"./indexedDb\";\r\nimport { FileSystemFileHandle, FileSystemDirectoryHandle, FileSystemWritableFileStream } from \"native-file-system-adapter\";\r\nimport { Caniuse } from \"../avalonia\";\r\n\r\nexport class StorageItem {\r\n    private constructor(\r\n        public handle?: FileSystemFileHandle | FileSystemDirectoryHandle,\r\n        private readonly file?: File,\r\n        private readonly bookmarkId?: string,\r\n        public wellKnownType?: WellKnownDirectory\r\n    ) {\r\n    }\r\n\r\n    public get name(): string {\r\n        if (this.handle) {\r\n            return this.handle.name;\r\n        }\r\n        if (this.file) {\r\n            return this.file.name;\r\n        }\r\n        return this.wellKnownType ?? \"\";\r\n    }\r\n\r\n    public get kind(): \"file\" | \"directory\" {\r\n        if (this.handle) {\r\n            return this.handle.kind;\r\n        }\r\n        if (this.file) {\r\n            return \"file\";\r\n        }\r\n        return \"directory\";\r\n    }\r\n\r\n    public static createFromHandle(handle: FileSystemFileHandle | FileSystemDirectoryHandle, bookmarkId?: string) {\r\n        return new StorageItem(handle, undefined, bookmarkId, undefined);\r\n    }\r\n\r\n    public static createFromFile(file: File) {\r\n        return new StorageItem(undefined, file, undefined, undefined);\r\n    }\r\n\r\n    public static createWellKnownDirectory(type: WellKnownDirectory) {\r\n        return new StorageItem(undefined, undefined, undefined, type);\r\n    }\r\n\r\n    public static async openRead(item: StorageItem): Promise<Blob> {\r\n        if (item.file) {\r\n            return item.file;\r\n        }\r\n\r\n        if (!item.handle || item.kind !== \"file\") {\r\n            throw new Error(\"StorageItem is not a file\");\r\n        }\r\n\r\n        await item.verityPermissions(\"read\");\r\n\r\n        const file = await (item.handle as FileSystemFileHandle).getFile();\r\n        return file;\r\n    }\r\n\r\n    public static async openWrite(item: StorageItem): Promise<FileSystemWritableFileStream> {\r\n        if (!item.handle || item.kind !== \"file\") {\r\n            throw new Error(\"StorageItem is not a writeable file\");\r\n        }\r\n\r\n        await item.verityPermissions(\"readwrite\");\r\n\r\n        return await (item.handle as FileSystemFileHandle).createWritable({ keepExistingData: true });\r\n    }\r\n\r\n    public static async getProperties(item: StorageItem): Promise<{ Size: number; LastModified: number; Type: string } | null> {\r\n        // getFile can fail with an exception depending if we use polyfill with a save file dialog or not.\r\n        try {\r\n            const file = item.handle && \"getFile\" in item.handle\r\n                ? await item.handle.getFile()\r\n                : item.file;\r\n\r\n            if (!file) {\r\n                return null;\r\n            }\r\n\r\n            return {\r\n                Size: file.size,\r\n                LastModified: file.lastModified,\r\n                Type: file.type\r\n            };\r\n        } catch {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    public static getItemsIterator(item: StorageItem): any | null {\r\n        if (item.kind !== \"directory\" || !item.handle) {\r\n            return null;\r\n        }\r\n\r\n        return (item.handle as any).entries();\r\n    }\r\n\r\n    public static async createFile(item: StorageItem, name: string): Promise<any | null> {\r\n        if (item.kind !== \"directory\" || !item.handle) {\r\n            throw new TypeError(\"Unable to create item in the requested directory\");\r\n        }\r\n\r\n        await item.verityPermissions(\"readwrite\");\r\n\r\n        return await ((item.handle as any).getFileHandle(name, { create: true }) as Promise<any>);\r\n    }\r\n\r\n    public static async createFolder(item: StorageItem, name: string): Promise<any | null> {\r\n        if (item.kind !== \"directory\" || !item.handle) {\r\n            throw new TypeError(\"Unable to create item in the requested directory\");\r\n        }\r\n\r\n        await item.verityPermissions(\"readwrite\");\r\n\r\n        return await ((item.handle as any).getDirectoryHandle(name, { create: true }) as Promise<any>);\r\n    }\r\n\r\n    public static async deleteAsync(item: StorageItem): Promise<any | null> {\r\n        if (!item.handle) {\r\n            return null;\r\n        }\r\n\r\n        await item.verityPermissions(\"readwrite\");\r\n\r\n        return await ((item.handle as any).remove({ recursive: true }) as Promise<any>);\r\n    }\r\n\r\n    public static async moveAsync(item: StorageItem, destination: StorageItem): Promise<any | null> {\r\n        if (!item.handle) {\r\n            return null;\r\n        }\r\n        if (destination.kind !== \"directory\" || !destination.handle) {\r\n            throw new TypeError(\"Unable to move item to the requested directory\");\r\n        }\r\n\r\n        await item.verityPermissions(\"readwrite\");\r\n\r\n        return await ((item.handle as any).move(destination /*, newName */) as Promise<any>);\r\n    }\r\n\r\n    private async verityPermissions(mode: \"read\" | \"readwrite\"): Promise<void | never> {\r\n        if (!this.handle) {\r\n            return;\r\n        }\r\n\r\n        // If we are using polyfill, let it decide permissions by itself, we can't request anything in this case.\r\n        if (!Caniuse.hasNativeFilePicker()) {\r\n            return;\r\n        }\r\n\r\n        if (await this.handle.queryPermission({ mode }) === \"granted\") {\r\n            return;\r\n        }\r\n\r\n        if (await this.handle.requestPermission({ mode }) === \"denied\") {\r\n            throw new Error(\"Permissions denied\");\r\n        }\r\n    }\r\n\r\n    public static async saveBookmark(item: StorageItem): Promise<string | null> {\r\n        // If file was previously bookmarked, just return old one.\r\n        if (item.bookmarkId) {\r\n            return item.bookmarkId;\r\n        }\r\n\r\n        // Bookmarks are not supported with polyfill.\r\n        if (!item.handle || !Caniuse.hasNativeFilePicker()) {\r\n            return null;\r\n        }\r\n\r\n        const connection = await avaloniaDb.connect();\r\n        try {\r\n            const key = await connection.put(fileBookmarksStore, item.handle, item.generateBookmarkId());\r\n            return key as string;\r\n        } finally {\r\n            connection.close();\r\n        }\r\n    }\r\n\r\n    public static async deleteBookmark(item: StorageItem): Promise<void> {\r\n        if (!item.bookmarkId || !Caniuse.hasNativeFilePicker()) {\r\n            return;\r\n        }\r\n\r\n        const connection = await avaloniaDb.connect();\r\n        try {\r\n            await connection.delete(fileBookmarksStore, item.bookmarkId);\r\n        } finally {\r\n            connection.close();\r\n        }\r\n    }\r\n\r\n    private generateBookmarkId(): string {\r\n        return Date.now().toString(36) + Math.random().toString(36).substring(2);\r\n    }\r\n}\r\n\r\nexport class StorageItems {\r\n    constructor(private readonly items: StorageItem[]) { }\r\n\r\n    public static itemsArray(instance: StorageItems): StorageItem[] {\r\n        return instance.items;\r\n    }\r\n\r\n    public static filesToItemsArray(files: File[]): StorageItem[] {\r\n        if (!files) {\r\n            return [];\r\n        }\r\n\r\n        const retItems = [];\r\n        for (let i = 0; i < files.length; i++) {\r\n            retItems[i] = StorageItem.createFromFile(files[i]);\r\n        }\r\n        return retItems;\r\n    }\r\n}\r\n", "/** @typedef {import('./FileSystemDirectoryHandle.js').default} FileSystemDirectoryHandle */\n\nconst native = globalThis.showDirectoryPicker\n\n/**\n * @param {Object} [options]\n * @param {boolean} [options._preferPolyfill] If you rather want to use the polyfill instead of the native\n * @returns {Promise<FileSystemDirectoryHandle>}\n */\nasync function showDirectoryPicker (options = {}) {\n  if (native && !options._preferPolyfill) {\n    return native(options)\n  }\n\n  const input = document.createElement('input')\n  input.type = 'file'\n\n  // Even with this check, the browser may support the attribute, but not the functionality (e.g. iOS Safari)\n  if (!('webkitdirectory' in input)) {\n    throw new Error(`HTMLInputElement.webkitdirectory is not supported`)\n  }\n\n  // See https://stackoverflow.com/questions/47664777/javascript-file-input-onchange-not-working-ios-safari-only\n  input.style.position = 'fixed'\n  input.style.top = '-100000px'\n  input.style.left = '-100000px'\n  document.body.appendChild(input)\n\n  input.webkitdirectory = true\n\n  // Lazy load while the user is choosing the directory\n  const p = import('./util.js')\n\n  await new Promise(resolve => {\n    input.addEventListener('change', resolve)\n    input.click()\n  })\n\n  return p.then(mod => mod.getDirHandlesFromInput(input))\n}\n\nexport default showDirectoryPicker\nexport { showDirectoryPicker }\n", "/** @typedef {import('./FileSystemFileHandle.js').default} FileSystemFileHandle */\n\nconst def = { accepts: [] }\nconst native = globalThis.showOpenFilePicker\n\n/**\n * @param {Object} [options]\n * @param {boolean} [options.multiple] If you want to allow more than one file\n * @param {boolean} [options.excludeAcceptAllOption=false] Prevent user for selecting any\n * @param {Object[]} [options.accepts] Files you want to accept\n * @param {boolean} [options._preferPolyfill] If you rather want to use the polyfill instead of the native\n * @returns {Promise<FileSystemFileHandle[]>}\n */\nasync function showOpenFilePicker (options = {}) {\n  const opts = { ...def, ...options }\n\n  if (native && !options._preferPolyfill) {\n    return native(opts)\n  }\n\n  const input = document.createElement('input')\n  input.type = 'file'\n  input.multiple = opts.multiple\n  input.accept = (opts.accepts || [])\n    .map(e => [\n      ...(e.extensions || []).map(e => '.' + e),\n      ...e.mimeTypes || []]\n    )\n    .flat()\n    .join(',')\n\n  // See https://stackoverflow.com/questions/47664777/javascript-file-input-onchange-not-working-ios-safari-only\n  input.style.position = 'fixed'\n  input.style.top = '-100000px'\n  input.style.left = '-100000px'\n  document.body.appendChild(input)\n\n  // Lazy load while the user is choosing the directory\n  const p = import('./util.js')\n\n  await new Promise(resolve => {\n    input.addEventListener('change', resolve)\n    input.click()\n  })\n\n  return p.then(m => m.getFileHandlesFromInput(input))\n}\n\nexport default showOpenFilePicker\nexport { showOpenFilePicker }\n", "/** @typedef {import('./FileSystemFileHandle.js').default} FileSystemFileHandle */\n\nconst native = globalThis.showSaveFilePicker\n\n/**\n * @param {Object} [options]\n * @param {boolean} [options.excludeAcceptAllOption=false] Prevent user for selecting any\n * @param {Object[]} [options.types] Files you want to accept\n * @param {string} [options.suggestedName] the name to fall back to when using polyfill\n * @param {string} [options._name] the name to fall back to when using polyfill\n * @param {boolean} [options._preferPolyfill] If you rather want to use the polyfill instead of the native\n * @return {Promise<FileSystemFileHandle>}\n */\nasync function showSaveFilePicker (options = {}) {\n  if (native && !options._preferPolyfill) {\n    return native(options)\n  }\n\n  if (options._name) {\n    console.warn('deprecated _name, spec now have `suggestedName`')\n    options.suggestedName = options._name\n  }\n\n  const { FileSystemFileHandle } = await import('./FileSystemFileHandle.js')\n  const { FileHandle } = await import('./adapters/downloader.js')\n  return new FileSystemFileHandle(new FileHandle(options.suggestedName))\n}\n\nexport default showSaveFilePicker\nexport { showSaveFilePicker }\n", "/** @typedef {import('./FileSystemDirectoryHandle.js').default} FileSystemDirectoryHandle */\n\nif (globalThis.DataTransferItem && !DataTransferItem.prototype.getAsFileSystemHandle) {\n  DataTransferItem.prototype.getAsFileSystemHandle = async function () {\n    const entry = this.webkitGetAsEntry()\n    const [\n      { FileHandle, FolderHandle },\n      { FileSystemDirectoryHandle },\n      { FileSystemFileHandle }\n    ] = await Promise.all([\n      import('./adapters/sandbox.js'),\n      import('./FileSystemDirectoryHandle.js'),\n      import('./FileSystemFileHandle.js')\n    ])\n\n    return entry.isFile\n      ? new FileSystemFileHandle(new FileHandle(entry, false))\n      : new FileSystemDirectoryHandle(new FolderHandle(entry, false))\n  }\n}\n\n/**\n * @param {object=} driver\n * @return {Promise<FileSystemDirectoryHandle>}\n */\nasync function getOriginPrivateDirectory (driver, options = {}) {\n  if (!driver) {\n    return globalThis.navigator?.storage?.getDirectory() || globalThis.getOriginPrivateDirectory()\n  }\n  const {FileSystemDirectoryHandle} = await import('./FileSystemDirectoryHandle.js')\n  const module = await driver\n  const sandbox = await (module.default\n    ? module.default(options)\n    : module(options)\n  )\n  return new FileSystemDirectoryHandle(sandbox)\n}\n\nexport default getOriginPrivateDirectory\n", "import showDirectoryPicker from './showDirectoryPicker.js'\nimport showOpenFilePicker from './showOpenFilePicker.js'\nimport showSaveFilePicker from './showSaveFilePicker.js'\nimport getOriginPrivateDirectory from './getOriginPrivateDirectory.js'\nimport FileSystemDirectoryHandle from './FileSystemDirectoryHandle.js'\nimport FileSystemFileHandle from './FileSystemFileHandle.js'\nimport FileSystemHandle from './FileSystemHandle.js'\nimport FileSystemWritableFileStream from './FileSystemWritableFileStream.js'\n\nexport {\n  FileSystemDirectoryHandle,\n  FileSystemFileHandle,\n  FileSystemHandle,\n  FileSystemWritableFileStream,\n  getOriginPrivateDirectory,\n  showDirectoryPicker,\n  showOpenFilePicker,\n  showSaveFilePicker\n}\n", "import { avaloniaDb, fileBookmarksStore } from \"./indexedDb\";\r\nimport { StorageItem, StorageItems } from \"./storageItem\";\r\nimport { showOpenFilePicker, showDirectoryPicker, FileSystemFileHandle } from \"native-file-system-adapter\";\r\n\r\ndeclare global {\r\n    type WellKnownDirectory = \"desktop\" | \"documents\" | \"downloads\" | \"music\" | \"pictures\" | \"videos\";\r\n    interface FilePickerAcceptType {\r\n        description?: string | undefined;\r\n        accept: Record<string, string | string[]>;\r\n    }\r\n}\r\n\r\nexport class StorageProvider {\r\n    public static async selectFolderDialog(\r\n        startIn: StorageItem | null): Promise<StorageItem> {\r\n        // 'Picker' API doesn't accept \"null\" as a parameter, so it should be set to undefined.\r\n        const options = {\r\n            startIn: (startIn?.wellKnownType ?? startIn?.handle ?? undefined)\r\n        };\r\n\r\n        const handle = await showDirectoryPicker(options as any);\r\n        return StorageItem.createFromHandle(handle);\r\n    }\r\n\r\n    public static async openFileDialog(\r\n        startIn: StorageItem | null, multiple: boolean,\r\n        types: FilePickerAcceptType[] | null, excludeAcceptAllOption: boolean): Promise<StorageItems> {\r\n        const options = {\r\n            startIn: (startIn?.wellKnownType ?? startIn?.handle ?? undefined),\r\n            multiple,\r\n            excludeAcceptAllOption,\r\n            types: (types ?? undefined)\r\n        };\r\n\r\n        const handles = await showOpenFilePicker(options);\r\n        return new StorageItems(handles.map((handle: FileSystemFileHandle) => StorageItem.createFromHandle(handle)));\r\n    }\r\n\r\n    public static async saveFileDialog(\r\n        startIn: StorageItem | null, suggestedName: string | null,\r\n        types: FilePickerAcceptType[] | null, excludeAcceptAllOption: boolean): Promise<StorageItem> {\r\n        const options = {\r\n            startIn: (startIn?.wellKnownType ?? startIn?.handle ?? undefined),\r\n            suggestedName: (suggestedName ?? undefined),\r\n            excludeAcceptAllOption,\r\n            types: (types ?? undefined)\r\n        };\r\n\r\n        // Always prefer native save file picker, as polyfill solutions are not reliable.\r\n        const handle = await (globalThis as any).showSaveFilePicker(options);\r\n        return StorageItem.createFromHandle(handle);\r\n    }\r\n\r\n    public static async openBookmark(key: string): Promise<StorageItem | null> {\r\n        const connection = await avaloniaDb.connect();\r\n        try {\r\n            const handle = await connection.get(fileBookmarksStore, key);\r\n            return handle && StorageItem.createFromHandle(handle, key);\r\n        } finally {\r\n            connection.close();\r\n        }\r\n    }\r\n\r\n    public static createAcceptType(description: string, mimeTypes: string[], extensions: string[] | undefined): FilePickerAcceptType {\r\n        const accept: Record<string, string[]> = {};\r\n        mimeTypes.forEach(a => { accept[a] = extensions ?? []; });\r\n        return { description, accept };\r\n    }\r\n}\r\n"],
  "mappings": "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",
  "names": ["config", "config_default", "init_config", "__esmMin", "memory_exports", "__export", "FileHandle", "FolderHandle", "Sink", "memory_default", "File", "Blob", "DOMException", "INVALID", "GONE", "MISMATCH", "MOD_ERR", "SYNTAX", "SECURITY", "DISALLOWED", "fs", "init_memory", "__esmMin", "init_util", "init_config", "config_default", "errors", "fileHandle", "file", "chunk", "blob", "head", "tail", "padding", "name", "writable", "opts", "other", "entry", "isFile", "recursive", "x", "sandbox_exports", "__export", "FileHandle", "FolderHandle", "sandbox_default", "DISALLOWED", "Sink", "init_sandbox", "__esmMin", "init_util", "errors", "writer", "fileEntry", "chunk", "resolve", "reject", "evt", "file", "writable", "other", "opts", "fileWriter", "dir", "reader", "entries", "x", "name", "entry", "err", "e", "kAdapter", "_a", "FileSystemHandle", "FileSystemHandle_default", "init_FileSystemHandle", "__esmMin", "adapter", "__publicField", "mode", "handle", "options", "other", "WritableStream", "FileSystemWritableFileStream", "FileSystemWritableFileStream_default", "init_FileSystemWritableFileStream", "__esmMin", "init_config", "config_default", "args", "w", "p", "position", "size", "data", "writer", "FileSystemFileHandle_exports", "__export", "FileSystemFileHandle", "FileSystemFileHandle_default", "kAdapter", "_a", "init_FileSystemFileHandle", "__esmMin", "init_FileSystemHandle", "init_FileSystemWritableFileStream", "FileSystemHandle_default", "adapter", "__publicField", "options", "FileSystemWritableFileStream_default", "FileSystemDirectoryHandle_exports", "__export", "FileSystemDirectoryHandle", "FileSystemDirectoryHandle_default", "kAdapter", "_a", "init_FileSystemDirectoryHandle", "__esmMin", "init_FileSystemHandle", "FileSystemHandle_default", "adapter", "__publicField", "name", "options", "handle", "FileSystemFileHandle", "_", "entry", "possibleDescendant", "openSet", "current", "path", "util_exports", "__export", "config", "errors", "fromDataTransfer", "getDirHandlesFromInput", "getFileHandlesFromInput", "entries", "memory", "sandbox", "fs", "folder", "entry", "input", "FolderHandle", "FileHandle", "FileSystemDirectoryHandle", "files", "rootName", "root", "file", "path", "name", "dir", "FileSystemFileHandle", "init_util", "__esmMin", "m", "InnerDbConnection", "database", "store", "mode", "obj", "key", "os", "resolve", "reject", "response", "IndexedDbWrapper", "databaseName", "objectStores", "conn", "event", "db", "fileBookmarksStore", "avaloniaDb", "isBrowser", "isFirefox", "Caniuse", "_a", "userAgentData", "userAgent", "regex1", "regex2", "StorageItem", "handle", "file", "bookmarkId", "wellKnownType", "_a", "type", "item", "e", "name", "destination", "mode", "Caniuse", "connection", "avaloniaDb", "fileBookmarksStore", "StorageItems", "items", "instance", "files", "retItems", "native", "showDirectoryPicker", "options", "input", "p", "resolve", "mod", "showDirectoryPicker_default", "def", "native", "showOpenFilePicker", "options", "opts", "input", "e", "p", "resolve", "m", "showOpenFilePicker_default", "native", "entry", "FileHandle", "FolderHandle", "FileSystemDirectoryHandle", "FileSystemFileHandle", "init_FileSystemDirectoryHandle", "init_FileSystemFileHandle", "init_FileSystemHandle", "init_FileSystemWritableFileStream", "StorageProvider", "startIn", "_a", "_b", "options", "handle", "showDirectoryPicker_default", "StorageItem", "multiple", "types", "excludeAcceptAllOption", "handles", "showOpenFilePicker_default", "StorageItems", "suggestedName", "key", "connection", "avaloniaDb", "fileBookmarksStore", "description", "mimeTypes", "extensions", "accept", "a"]
}
